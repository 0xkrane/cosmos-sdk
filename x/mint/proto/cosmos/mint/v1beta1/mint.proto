syntax = "proto3";
package cosmos.mint.v1beta1;

option go_package = "cosmossdk.io/x/mint/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Minter represents the minting state.
message Minter {
  // current annual inflation rate
  string inflation = 1 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];
  // current annual expected provisions
  string annual_provisions = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false
  ];
  // epoch_provisions represent rewards for the current epoch.
  string epoch_provisions = 3 [
    (cosmos_proto.field_added_in) = "cosmos-sdk v0.51",
    (gogoproto.customtype)        = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)          = false
  ];
}

// Params defines the parameters for the x/mint module.
message Params {
  option (amino.name) = "cosmos-sdk/x/mint/Params";

  // type of coin to mint
  string mint_denom = 1;
  // maximum annual change in inflation rate
  string inflation_rate_change = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // maximum inflation rate
  string inflation_max = 3 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // minimum inflation rate
  string inflation_min = 4 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // goal of percent bonded atoms
  string goal_bonded = 5 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)   = false,
    (amino.dont_omitempty) = true
  ];
  // expected blocks per year
  uint64 blocks_per_year = 6;

  // epoch_identifier mint epoch identifier e.g. (day, week).
  string epoch_identifier = 7 [(cosmos_proto.field_added_in) = "cosmos-sdk v0.51"];
  // reduction_period_in_epochs the number of epochs it takes
  // to reduce the rewards.
  int64 reduction_period_in_epochs = 8 [(cosmos_proto.field_added_in) = "cosmos-sdk v0.51"];
  // reduction_factor is the reduction multiplier to execute
  // at the end of each period set by reduction_period_in_epochs.
  string reduction_factor = 9 [
    (cosmos_proto.field_added_in) = "cosmos-sdk v0.51",
    (gogoproto.customtype)        = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)          = false
  ];
  // minting_rewards_distribution_start_epoch start epoch to distribute minting
  // rewards
  int64 minting_rewards_distribution_start_epoch = 10 [(cosmos_proto.field_added_in) = "cosmos-sdk v0.51"];
  // genesis_epoch_provisions epoch provisions from the first epoch.
  string genesis_epoch_provisions = 11 [
    (cosmos_proto.field_added_in) = "cosmos-sdk v0.51",
    (gogoproto.customtype)        = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable)          = false
  ];
}
